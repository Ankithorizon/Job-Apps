import { Component, Input } from '@angular/core';
import { HttpEventType, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { DataService } from '../../../services/data.service';
import { Router } from '@angular/router';
import { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';
import { LocalDataService } from 'src/app/services/local-data.service';
import PersonalInfo from 'src/app/models/personalInfo';
import { COMMA, ENTER } from '@angular/cdk/keycodes';
import { ElementRef, ViewChild } from '@angular/core';
import { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';
import { MatChipInputEvent } from '@angular/material/chips';
import { map, startWith } from 'rxjs/operators';
import Education from 'src/app/models/education';

@Component({
  selector: 'app-education-create',
  templateUrl: './education-create.component.html',
  styleUrls: ['./education-create.component.css']
})
export class EducationCreateComponent {

  @Input() pageHeader: string | undefined;

  educationForm: FormGroup;

  submitted = false;
  education = new Education();
  educations: Education[] = [];


  constructor(
    private router: Router,
    public dataService: DataService,
    private formBuilder: FormBuilder,
    public localDataService: LocalDataService
  ) {
    this.educationForm = this.formBuilder.group({
      universityName: ['', Validators.required],
      country: ['', Validators.required],
      startDate: ['', Validators.required],
      endDate: ['', Validators.required],
      degreeName: ['', Validators.required],
      major: ['']    
    });
  }


  prepareDataForEducation() {
    this.submitted = true;

    if (!this.educationForm.valid) {
      console.log('Invalid Form!');
      return;
    }

    // prepare education data
    var educationData = {
      universityName: this.educationForm.value["universityName"],
      country: this.educationForm.value["country"],
      startDate: this.educationForm.value["startDate"],
      endDate: this.educationForm.value["endDate"],
      degreeName: this.educationForm.value["degreeName"],
      major: this.educationForm.value["major"]
    };

    // reset education form  
    this.educationForm.reset();

    // save to local-data-service
    this.educations.push(educationData);
    this.localDataService.setEducation(this.educations);
  }

  // save education to educations[] and stays to education step
  // in resume - creator 
  saveAndAddMoreEducation() {
    this.prepareDataForEducation();
  }

  // save all educations and move to next step in resume-creator
  saveEducation() {
    this.prepareDataForEducation();

    if (this.localDataService.getEducation() != undefined && this.localDataService.getEducation().length > 0) {
      console.log(this.localDataService.getEducation());

      // move to next step
    }
    else {
      console.log('You Have ZERO Education !');
    }   
  }

}


---------------------------------

<div class="educationContainer">
    <div>
        <h2>{{pageHeader}}</h2>
    </div>
    <div>
        <form [formGroup]="educationForm">
            <div class="saveButton">
                <button (click)="saveEducation()" mat-raised-button color="primary" type="button">
                    <mat-icon>save</mat-icon>
                    &nbsp;&nbsp;Save
                </button> &nbsp;&nbsp;&nbsp;&nbsp;
                <button (click)="saveAndAddMoreEducation()" mat-raised-button color="primary" type="button">
                    <mat-icon>save</mat-icon><span> &nbsp;&amp;&nbsp; </span><mat-icon>note_add</mat-icon>
                    &nbsp;&nbsp; Save & Add More
                </button>
            </div>

            <div fxLayout="row" class="parent" fxLayout.lg="row " fxLayout.md="row" fxLayout.sm="column" fxLayout.xs="column">
                <div fxFlex="50%" fxFlex.xs="100%" fxFlex.sm="100%" fxFlex.md="100%" class="mainContentLeft">
                    <mat-form-field [style.width.px]=327 class="form-field" appearance="outline">
                        <mat-label> University Name
                        </mat-label>
                        <input matInput formControlName="universityName" required>
                        <mat-error *ngIf="(educationForm.controls.universityName.touched || submitted ) && educationForm.controls.universityName.invalid">
                            <span *ngIf="educationForm.controls.universityName.errors.required">This
                                field is mandatory.</span>
                        </mat-error>
                    </mat-form-field>
                    <p></p>
                    <mat-form-field [style.width.px]=327 class="form-field" appearance="outline">
                        <mat-label> Degree Name
                        </mat-label>
                        <input matInput formControlName="degreeName" required>
                        <mat-error *ngIf="(educationForm.controls.degreeName.touched || submitted ) && educationForm.controls.degreeName.invalid">
                            <span *ngIf="educationForm.controls.degreeName.errors.required">This
                                field is mandatory.</span>
                        </mat-error>
                    </mat-form-field>
                    <p></p>
                    <mat-form-field [style.width.px]=327 class="form-field" appearance="outline">
                        <mat-label> Major
                        </mat-label>
                        <input matInput formControlName="major">
                    </mat-form-field>
                    <p></p>
                </div>
                <div fxFlex="50%" fxFlex.xs="100%" fxFlex.sm="100%" fxFlex.md="100%" class="mainContentLeft">
                    <mat-form-field [style.width.px]=327 class="form-field" appearance="outline">
                        <mat-label> Country
                        </mat-label>
                        <input matInput formControlName="country" required>
                        <mat-error *ngIf="(educationForm.controls.country.touched || submitted ) && educationForm.controls.country.invalid">
                            <span *ngIf="educationForm.controls.country.errors.required">This
                                field is mandatory.</span>
                        </mat-error>
                    </mat-form-field>
                    <p></p>
                    <mat-form-field [style.width.px]=327 class="form-field" appearance="outline">
                        <mat-label> Start Date
                        </mat-label>
                        <input matInput formControlName="startDate" required>
                        <mat-error *ngIf="(educationForm.controls.startDate.touched || submitted ) && educationForm.controls.startDate.invalid">
                            <span *ngIf="educationForm.controls.startDate.errors.required">This
                                field is mandatory.</span>
                        </mat-error>
                    </mat-form-field>
                    <p></p>
                    <mat-form-field [style.width.px]=327 class="form-field" appearance="outline">
                        <mat-label> End Date
                        </mat-label>
                        <input matInput formControlName="endDate" required>
                        <mat-error *ngIf="(educationForm.controls.endDate.touched || submitted ) && educationForm.controls.endDate.invalid">
                            <span *ngIf="educationForm.controls.endDate.errors.required">This
                                field is mandatory.</span>
                        </mat-error>
                    </mat-form-field>
                    <p></p>
                </div>
            </div>
        </form>
    </div>
</div>

------------------------------------------------------------


.pageHeader {
    text-align: center;
    vertical-align: middle;
    margin-top: 20px;
    padding-top: 10px;
    padding-bottom: 10px;
    margin-bottom: 20px;
    border: 2px solid blueviolet;
    border-radius: 10px;
    background-color: lightseagreen;
    color: black;
    font-size: x-large;
}

th.mat-header-cell {
    text-align: left;
    max-width: 300px;
}

.mainContainer {
    padding: 20px;
}

.educationContainer {
    padding: 40px;
}

.tabContainer {
    padding-left: 20px;
    padding-right: 20px;
    font-style: oblique;
}

.parent {
    height: 100%;
}

.mainContentLeft {
    padding: 10px;
}

.mainContentRight {
    padding: 10px;
}

mat-form-field {
    width: 80%;
}

.saveButton {
    padding-bottom: 30px;
}





